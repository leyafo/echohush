name: Release macOS App

on:
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag'
        required: true
        default: '1.0.0'

jobs:
  release:
    name: Release macOS App
    runs-on: macos-latest # We can cross compile but need to be on macOS to notarise
    strategy:
      matrix:
        platform:
          - darwin/amd64

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: 'Get Latest tag'
        id: tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 

      - name: Normalise platform tag
        id: normalise_platform
        shell: bash
        run: |
          tag=$(echo ${{ matrix.platform }} | sed -e 's/\//_/g' -e 's/darwin/mac/g' -e 's/amd64/intel/g')
          echo "tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: stable

      - name: Install wails
        shell: bash
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build frontend assets
        shell: bash
        run: |
          npm install -g npm@9
          jq '.info.productVersion = "${{ steps.tag.outputs.tag }}"' wails.json > tmp.json
          mv tmp.json wails.json
          cd frontend
          jq '.version = "${{ steps.tag.outputs.tag }}"' package.json > tmp.json
          mv tmp.json package.json
          npm install

      - name: Build wails app for macOS
        shell: bash
        run: |
          make production

      - name: Checkout create-image
        uses: actions/checkout@v2
        with:
          repository: create-dmg/create-dmg
          path: ./build/create-dmg
          ref: master

      - name: Build macOS DMG
        shell: bash
        working-directory: ./build
        run: |
          mv bin/echohush.app "bin/echohush.app"
          ./create-dmg/create-dmg \
            --no-internet-enable \
            --volname "echohush" \
            --volicon "bin/echohush.app/Contents/Resources/iconfile.icns" \
            --background "dmg/background.tiff" \
            --text-size 12 \
            --window-pos 400 400 \
            --window-size 660 450 \
            --icon-size 80 \
            --icon "echohush.app" 180 180 \
            --hide-extension "echohush.app" \
            --app-drop-link 480 180 \
            --add-file "Repair" "dmg/fix-app" 230 290 \
            --add-file "损坏修复" "dmg/fix-app_zh" 430 290 \
            "bin/echohush-${{ steps.normalise_platform.outputs.tag }}.dmg" \
            "bin"

      - name: Rename dmg
        working-directory: ./build/bin
        run: mv "echohush-${{ steps.normalise_platform.outputs.tag }}.dmg" "echohush_${{ steps.tag.outputs.tag }}_${{ steps.normalise_platform.outputs.tag }}.dmg"

      - name: Upload release asset (DMG Package)
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.tag.outputs.tag }}
          files: ./build/bin/echohush_${{ steps.tag.outputs.tag }}_${{ steps.normalise_platform.outputs.tag }}.dmg
          token: ${{ secrets.GITHUB_TOKEN }}
